/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";
import { useGameStore } from "../store";

export default function Character(props) {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF("./models/Male/model.gltf");
    const { actions } = useAnimations(animations, group);

    const characterState = useGameStore((state) => state.characterState);

    useEffect(() => {
        actions[characterState].reset().fadeIn(0.2).play();
        return () => {
            actions[characterState].fadeOut(0.2);
        };
    }, [characterState]);

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="Root003" scale={0.64}>
                    <primitive object={nodes.LeftFootCtrl} />
                    <primitive object={nodes.RightFootCtrl} />
                    <primitive object={nodes.HipsCtrl} />
                    <skinnedMesh
                        name="characterMedium"
                        geometry={nodes.characterMedium.geometry}
                        material={materials["skin.001"]}
                        skeleton={nodes.characterMedium.skeleton}
                    />
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("./models/Male/model.gltf");




/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


// export default function Character(props) {
//     const group = useRef();

//     const { nodes, materials, animations } = useGLTF('./models/Hisoka/untitled.gltf')
//     const { actions, clips } = useAnimations(animations, group);

//     const characterState = useGameStore((state) => state.characterState);

//     useEffect(() => {
//         console.log(actions, clips, animations)
//         actions[characterState].reset().fadeIn(0.2).play();
//         return () => {
//             actions[characterState].fadeOut(0.2);
//         };
//     }, [characterState]);

//     return (
//         <group ref={group} {...props} dispose={null}>
//             <group name="Scene">
//                 <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
//                     <primitive object={nodes.mixamorigHips} />
//                     <skinnedMesh name="Character001" geometry={nodes.Character001.geometry} material={materials['Skin.004']} skeleton={nodes.Character001.skeleton} />
//                     <skinnedMesh name="CharacterOutline002" geometry={nodes.CharacterOutline002.geometry} material={materials['Outline.004']} skeleton={nodes.CharacterOutline002.skeleton} />
//                     <skinnedMesh name="Clothing001" geometry={nodes.Clothing001.geometry} material={materials['Clothing.004']} skeleton={nodes.Clothing001.skeleton} />
//                     <skinnedMesh name="ClothingOutline001" geometry={nodes.ClothingOutline001.geometry} material={materials['Outline.004']} skeleton={nodes.ClothingOutline001.skeleton} />
//                     <skinnedMesh name="Eye_L001" geometry={nodes.Eye_L001.geometry} material={materials['Eye.003']} skeleton={nodes.Eye_L001.skeleton} />
//                     <skinnedMesh name="Eye_R001" geometry={nodes.Eye_R001.geometry} material={materials['Eye.003']} skeleton={nodes.Eye_R001.skeleton} />
//                     <skinnedMesh name="Hair001" geometry={nodes.Hair001.geometry} material={materials['Hair.004']} skeleton={nodes.Hair001.skeleton} />
//                     <skinnedMesh name="HairOutline001" geometry={nodes.HairOutline001.geometry} material={materials['Outline.004']} skeleton={nodes.HairOutline001.skeleton} />
//                 </group>
//             </group>
//         </group>
//     )

// }

// useGLTF.preload('./models/Hisoka/untitled.gltf')

